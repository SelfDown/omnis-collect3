"""
Django settings for sample project.

Generated by 'django-admin startproject' using Django 1.11.23.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""
import base64
import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
from collect.utils.collect_utils import get_key

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'k&8-%57+$k@jmz7j#6bems38qd5g!c3qgu%4_o2syg%!uffuqr'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'collect',
    'sample'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'sample.urls'
TIME_ZONE = 'Asia/Shanghai'
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['./sample/template'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
WSGI_APPLICATION = 'sample.wsgi.application'
# if get_key("memcache")=='true':
#     CACHES = {
#         'default': {
#             'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
#             'LOCATION': get_key("memcache_location"),
#         }
#     }


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'default': {
#             'ENGINE': 'django.db.backends.mysql',
#             'HOST': get_key("database.host"),
#             'NAME': get_key("database.name"),
#             'USER': get_key("database.user"),
#             'PASSWORD': base64.b64decode(get_key("database.password")).decode(),
#             'PORT': get_key("database.port", data_type="int"),
#             'CONN_MAX_AGE': 60 * 30,
#         },
#     }
# }

DATABASES = {
    # 'default': {
    #     'ENGINE': get_key("database.engine"),
    #     'NAME': get_key("database.name"),
    #     'USER': get_key("database.user"),
    #     'PASSWORD': get_key("database.password"),
    #     'HOST': get_key("database.host"),
    #     'PORT': get_key("database.port", data_type="int"),
    # }
    'default': {
        'ENGINE': get_key("database.engine"),
        'NAME': get_key("database.name"),
        'POOL_OPTIONS': {
            'POOL_SIZE': 100,
            'MAX_OVERFLOW': 50
        }

    }
}
# DATABASE_APPS_MAPPING = {
#     'zabbix': 'zabbix',
# }
# enable_proxy = get_key("zabbix_database_enable")
# if enable_proxy == "true":
#     DATABASES['zabbix'] = {
#         'ENGINE': 'django.db.backends.mysql',
#         'HOST': get_key("zabbix_database.host"),
#         'NAME': get_key("zabbix_database.name"),
#         'USER': get_key("zabbix_database.user"),
#         'PASSWORD': base64.b64decode(get_key("zabbix_database.password")).decode(),
#         'PORT': get_key("zabbix_database.port", data_type="int"),
#         'CONN_MAX_AGE': 60 * 30,
#     }
# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = False

ALLOWED_HOSTS = ['*']

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)
